{"version":3,"sources":["Clock/index.js","Container/index.js","currencies.js","Result/index.js","RateContainer/index.js","Form/index.js","App.js","reportWebVitals.js","index.js"],"names":["Clock","useState","Date","currentDate","setCurrentDate","useEffect","intervalId","setInterval","clearInterval","className","toLocaleString","weekday","day","month","hour","minute","second","Container","children","currencies","shortName","name","rate","Result","result","undefined","initialAmount","finalAmount","toFixed","currency","RateContainer","find","Form","calculateResult","amount","setAmount","setCurrency","wasValidated","setWasValidated","onSubmit","event","preventDefault","value","onChange","target","onBlur","placeholder","type","min","step","required","map","i","onClick","App","setResult","finalRate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f50a3149.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Clock = () => {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setCurrentDate(new Date());\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <p className=\"clock\">\r\n      Dzisiaj jest {currentDate.toLocaleString(\r\n        \"pl-PL\", { weekday: \"long\", day: \"numeric\", }\r\n      )}\r\n      &nbsp;\r\n      {currentDate.toLocaleString(\"pl-PL\", { month: \"long\", })}\r\n      &nbsp;\r\n      {currentDate.toLocaleString(\r\n        \"pl-PL\", { hour: \"numeric\", minute: \"numeric\", second: \"numeric\" }\r\n      )}\r\n    </p>\r\n\r\n  );\r\n};\r\n\r\nexport default Clock;","import \"./style.css\";\r\nimport Clock from \"../Clock\";\r\n\r\n\r\nconst Container = ({ children }) => (\r\n   <div className=\"container\">\r\n\t\t\t<Clock />\r\n      {children}\r\n   </div>\r\n);\r\n\r\nexport default Container;","export const currencies = [\r\n\t{ shortName: \"EUR\", name: \"EUR - euro\", rate: 4.60 },\r\n\t{ shortName: \"USD\", name: \"USD - dolar amerykański\", rate: 3.95 },\r\n\t{ shortName: \"GBP\", name: \"GBP - funt szterling\", rate: 5.44 },\r\n\t{ shortName: \"CHF\", name: \"CHF - frank szwajcarski\", rate: 4.31 }\r\n]","import \"./style.css\";\r\n\r\nconst Result = ({ result }) => {\r\n  if (result === undefined)\r\n    return null\r\n\r\n  return (\r\n    <p className=\"result\">\r\n      {result.initialAmount}&nbsp;PLN&nbsp;= { }\r\n      <strong>{result.finalAmount.toFixed(2)}</strong>&nbsp;{result.currency}\r\n    </p>\r\n  )\r\n};\r\n\r\nexport default Result;","import \"./style.css\";\r\n\r\nconst RateContainer = ({currencies, currency}) => (\r\n  <div className=\"rateContainer\">\r\n    <p className=\"rateContainer__text\">Aktualny kurs:</p>\r\n    <p className=\"rateContainer__text rateContainer__text--last\">\r\n      {currencies.find(({ shortName }) => shortName === currency).rate.toFixed(2)}\r\n      </p>\r\n  </div>\r\n);\r\n\r\nexport default RateContainer;","import \"./style.css\";\r\nimport { useState } from \"react\";\r\nimport { currencies } from \"../currencies\";\r\nimport Result from \"../Result\";\r\nimport RateContainer from \"../RateContainer\";\r\n\r\nconst Form = ({ calculateResult, result }) => {\r\n\tconst [amount, setAmount] = useState(\"\");\r\n\tconst [currency, setCurrency] = useState(currencies[0].shortName);\r\n\tconst [wasValidated, setWasValidated] = useState(false);\r\n\r\n\tconst onFormSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tcalculateResult(amount, currency);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className=\"form\" onSubmit={onFormSubmit}>\r\n\t\t\t<h2 className=\"form__header\">Przelicz walutę</h2>\r\n\t\t\t<label className=\"form__label\"><span className=\"form__labelText\">Kwota w PLN:*</span>\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={amount}\r\n\t\t\t\t\tonChange={({ target }) => setAmount(target.value)}\r\n\t\t\t\t\tonBlur={() => { setWasValidated(true) }}\r\n\t\t\t\t\tclassName={`form__field form__field--size ${wasValidated ? 'form_field--validated' : ''}`}\r\n\t\t\t\t\tplaceholder=\"Wpisz kwotę\"\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tmin=\"0.01\"\r\n\t\t\t\t\tstep=\"0.01\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t</label>\r\n\t\t\t<label className=\"form__label\"><span className=\"form__labelText\">Przelicz na:</span>\r\n\t\t\t\t<select\r\n\t\t\t\t\tvalue={currency}\r\n\t\t\t\t\tonChange={({ target }) => setCurrency(target.value)}\r\n\t\t\t\t\tclassName=\"form__field\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{currencies.map(i => (\r\n\t\t\t\t\t\t<option key={i.shortName} value={i.shortName} >\r\n\t\t\t\t\t\t\t{i.name}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t</label>\r\n\t\t\t<RateContainer currencies={currencies} currency={currency} />\r\n\t\t\t<input\r\n\t\t\t\tclassName=\"form__button\"\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t\tvalue=\"Przelicz\"\r\n\t\t\t\tonClick={() => setWasValidated(true)}\r\n\t\t\t/>\r\n\t\t\t<Result result={result} />\r\n\t\t\t<p className=\"form__paragraph\">\r\n\t\t\t\t* - Należy wpisać liczbę, która ma max. dwa miejsca po przecinku\r\n\t\t\t</p>\r\n\t\t</form>\r\n\t)\r\n};\r\n\r\nexport default Form;","import { useState } from \"react\";\nimport Container from \"./Container\";\nimport { currencies } from \"./currencies\";\nimport Form from \"./Form\";\n\nfunction App() {\n  const [result, setResult] = useState();\n\n  const calculateResult = (amount, currency) => {\n    const finalRate = currencies.find(({ shortName }) => shortName === currency).rate;\n\n    setResult({\n      initialAmount: +amount, finalAmount: amount / finalRate, currency\n    });\n  }\n\n  return (\n    <Container>\n      <Form calculateResult={calculateResult} result={result} />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}